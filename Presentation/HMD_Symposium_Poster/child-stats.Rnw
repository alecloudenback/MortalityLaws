<<parent, echo=FALSE, cache=FALSE>>=
set_parent('./Pascariu_HMD_Poster.Rnw')
@


<<echo=FALSE, eval=TRUE, cache=FALSE, autodep=TRUE, results='hide', message=FALSE, warning=FALSE, fig.show='hide'>>=
# This is some preliminary code
library(MortalityLaws)
library(dplyr)
library(ggplot2)
library(ggrepel)
library(diagram)

country = country_ <- 'SWE'

# username <- 'email@email.com'
# password <- 'my_password'
# 
# # Download HMD data
# HMD_Dx <- ReadHMD(countries = country,
#                   interval = '1x1',
#                   what = 'Dx',
#                   username,
#                   password,
#                   save = FALSE)
# 
# HMD_Ex <- ReadHMD(countries = country,
#                   interval = '1x1',
#                   what = 'Ex',
#                   username,
#                   password,
#                   save = FALSE)
# 
# save(HMD_Dx, HMD_Ex, file = 'SWEdata.Rdata')
load('SWEdata.Rdata')

Dx <- HMD_Dx$data
Ex <- HMD_Ex$data


my_theme <- function(){
  sz = 30
  theme(#strip.text.x = element_text(colour = "black"),
        legend.position = 'top',
        # legend.text.align = 0,
        # legend.title.align = 0,
        strip.text = element_text(size = sz),
        legend.title = element_text(size = sz),
        legend.text = element_text(size = sz),
        axis.text = element_text(size = sz),
        axis.title = element_text(size = sz),
        axis.title.x = element_text(margin = margin(25,0,0,0)),
        # strip.text = element_text(face = "bold")
        )
}


# ----------------------------------------------------
ggplot_full1 <- function(obs, fit.data) {
  age.range  = 0:110
  yr = c(1850, 1900, 1950, 2013)
  year.range = yr
  sex = 'Male'
  
  Ex2 <- Ex[, c('country', 'Year', 'Age', sex)] %>% 
    filter(country %in% country_, Year %in% year.range, Age %in% age.range) 
  Dx2 <- Dx[, c('country', 'Year', 'Age', sex)] %>% 
    filter(country %in% country_, Year %in% year.range, Age %in% age.range)
  colnames(Ex2) <- c('country', 'Year', 'Age', 'Ex')
  colnames(Dx2) <- c('country', 'Year', 'Age', 'Dx')
  hmd <- left_join(Ex2, Dx2, by = c('country','Year','Age')) %>% mutate(mx = Dx/Ex)
  
  ages = 0:100
  ages2 = 0:80
  laws = c('HP', 'thiele', 'siler')
  laws2 = c('Heligman-Pollard (1980)', 'Thiele (1872)', 'Siler (1979)')
  x = ages - min(ages)
  fit.this.x = ages2 - min(ages2)
  runs <- expand.grid(years = yr, laws = laws)
  
  fit.objects <- list()
  mxfit <- NULL
  for (i in 1:nrow(runs)) {
    year_i = runs[i, 1]
    law_i = as.character(runs[i, 2])
    deaths <- Dx[Dx$Year == year_i & Dx$Age %in% ages, ]
    exposure <- Ex[Ex$Year == year_i & Ex$Age %in% ages, ]
    
    fit_i <- MortalityLaw(x, Dx = deaths[, sex], Ex = exposure[, sex],
                          law = law_i, how = 'LF2', fit.this.x = fit.this.x)
    tab_i <- data.frame(country = country_, Age = ages, Year = year_i, 
                        mx = fitted.values(fit_i), model = law_i)
    mxfit = rbind(mxfit, tab_i)
    fit.objects[[i]] <- fit_i
  }
  levels(mxfit$model) <- laws2
  
  #---------------------
  ggplot_adult <- function(obs, fit.data){ 
    obs %>% filter(Age %in% ages, Year %in% yr) %>% 
      ggplot(aes(x = Age, y = log(mx))) +
      geom_point(size = 2.2) +
      geom_line(data = fit.data, aes(y = log(mx), color = model), size = 1.5) +
      facet_wrap(~Year, nrow = 1) +
      ylab( expression(paste('Age Specific-Death Rate, ', log(m[x]) )) ) +
      xlab("Age (x)") +
      guides(color = guide_legend(title = 'Mortality Laws:')) +
      my_theme()
  }
  ggplot_adult(obs = hmd, mxfit)
}

# ----------------------------------------------------
ggplot_old_age1 <- function() {
  age.range  = 0:110
  yr = c(1850, 1900, 1950, 2013)
  year.range = yr
  sex = 'Female'
  
  Ex2 <- Ex[, c('country', 'Year', 'Age', sex)] %>% 
    filter(country %in% country_, Year %in% year.range, Age %in% age.range) 
  Dx2 <- Dx[, c('country', 'Year', 'Age', sex)] %>% 
    filter(country %in% country_, Year %in% year.range, Age %in% age.range)
  colnames(Ex2) <- c('country', 'Year', 'Age', 'Ex')
  colnames(Dx2) <- c('country', 'Year', 'Age', 'Dx')
  hmd <- left_join(Ex2, Dx2, by = c('country','Year','Age')) %>% mutate(mx = Dx/Ex)

  ages = 75:110
  ages2 = 75:95
  laws = c('kannisto', 'gompertz', 'makeham')
  laws2 = c('Kannisto (1992)', 'Gompertz (1825)', 'Makeham (1860)')
  x = ages - min(ages) + 1
  fit.this.x = ages2 - min(ages2) + 1
  runs <- expand.grid(years = yr, laws = laws)
  
  fit.objects <- list()
  mxfit <- NULL
  
  for (i in 1:nrow(runs)) {
    year_i = runs[i, 1]
    law_i = as.character(runs[i, 2])
    deaths <- Dx[Dx$Year == year_i & Dx$Age %in% ages, ]
    exposure <- Ex[Ex$Year == year_i & Ex$Age %in% ages, ]
    
    fit_i <- MortalityLaw(x, Dx = deaths[, sex], Ex = exposure[, sex],
               law = law_i, how = 'poissonL', fit.this.x = fit.this.x)
    tab_i <- data.frame(country = country_, Age = ages, Year = year_i, 
                        mx = fitted.values(fit_i), model = law_i)
    mxfit = rbind(mxfit, tab_i)
    fit.objects[[i]] <- fit_i
  }
  
  levels(mxfit$model) <- laws2
  # --------------------
  ggplot_old_age <- function(obs, fit.data){ 
    min.age = min(fit.data$Age) - 5
    x.int <- c(min(ages2), max(ages2))
    
    obs[!is.na(obs$mx), ] %>% filter(Age >= min.age, Year %in% yr, mx > 0.0001) %>% 
      ggplot(aes(x = Age, y = mx) ) +
      geom_point(size = 1.0) +
      geom_line(data = fit.data, aes(y = mx, color = model)) +
      geom_vline(xintercept = x.int, linetype = 3) +
      facet_wrap(~Year, nrow = 1) +
      ylab(expression(paste('Age Specific-Death Rate, ', m[x]))) +
      xlab("Age (x)") +
      scale_y_continuous(limits = c(0, 1)) +
      guides(color = guide_legend(title = 'Mortality Laws:')) +
      annotate("rect", xmin = min(ages2), xmax = max(ages2), 
               ymin = 0, ymax = 1, alpha = .2) +
      annotate("text", x = 85, y = 0.9, label = "Fitted \n age-range" ) +
      my_theme()
  }
  ggplot_old_age(hmd, mxfit) 
}

# -------------------------------------

MortalityLaws_diagram <- function(){
  par(mar = rep(0.1, 4))
  names <- c('MortalityLaws\n R package', 'HMD.test.data', 
             'ReadHMD()', 'MortalityLaw()', 'lifetable()', 
            'summary()', 'coef()','fitted.values()', 'plot()')
  M <- matrix(nrow = 9, ncol = 9, byrow = TRUE, 
             data = c(# M hmd, r  m   l  p  s  p
                        0, 0, 0, 0,  0, 0, 0, 0, 0, #H
                        1, 0, 0, 0,  0, 0, 0, 0, 0, #hmd
                        2, 0, 0, 0,  0, 0, 0, 0, 0, #read
                        2, 0, 0, 0,  0, 0, 0, 0, 0, #Ml
                        2, 0, 0, 0,  0, 0, 0, 0, 0, #life
                        0, 0, 0, 3,  0, 0, 0, 0, 0, #summary
                        0, 0, 0, 3,  0, 0, 0, 0, 0, #coef
                        0, 0, 0, 3,  0, 0, 0, 0, 0, #fitted
                        0, 0, 0, 3,  0, 0, 0, 0, 0  #plot
                      ))
  pp <- plotmat(M, pos = c(1, 4, 4), curve = 0, name = names,
              lwd = 1, box.lwd = 2, cex.txt = 0,
              box.type = "square", box.prop = 0.4, arr.type = "triangle",
              arr.pos = 0.6, shadow.size = 0.01, prefix = "f",
              main = "")
}


# -----------------------------------------------------------------

plot_timeline <- function(){
  set.seed(452)
  year <- c(1725, 1825,  1860,  1870,  1872,  1883,  1930,  1932,
            1936,  1939,  1943,  1960,  1961,  1979,  1980,  1980.5,  
            1981,  1981.5,  1982,  1983,  1987,  1992,  1992.3,  
            1992.6,  1992.9, 1993)
  
  model <- c('DeMoivre', 'Gompertz', 'Makeham', 'Opperman', 'Thiele',
            'Wittstein & Bumstead', 'Steffenson', 'Perks', 'Harper', 'Weibull',
            'Van der Maen', 'Brillinger', 'Beard', 'Siler', 'Heligman-Pollard',
            'Brooks et al.', 'Petrioli', 'Hartmann', 'Mode and Busby', 
            'Rogers and Planck', 'Martinelle', 'Kostaki', 'Carriere', 'Kannisto',
            'Lee-Carter', 'Rogers and Little')
  
  m_size <- c(4, 5, 5, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4,
              5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4)
  
  MLplot <- function(dta){
  ggplot(dta, aes(x = year, y = yax)) +
    geom_point(size = 3) +
    geom_segment(aes(y = 0, yend = yax, xend = year)) +
    geom_hline(yintercept = 0, size = 1, color = 'black') + 
    geom_text_repel( aes(label = model), nudge_y = 0.2, 
                     nudge_x = -12, size = 3,
                     segment.color = 'grey') +
    scale_x_continuous(name = '', limits = c(1720, 2000), 
                       breaks = seq(1725, 2000, by = 25)) +
    ylab(' ') +
    theme_bw() + 
    theme(#strip.text = element_text(colour = "black", size = 18, face = "bold"),
          legend.position = 'none',
          legend.justification = c(1, 1),
          # legend.text = element_text(size = 7),
          # axis.title = element_text(size = 14, face = "bold"),
          # axis.text = element_text(color = 'blue'),
          axis.text.y = element_blank(),
          axis.ticks.y = element_blank(),
          plot.margin = unit(c(0, 0, 0, 0),"mm"),
          panel.border = element_rect(fill = NA, color = 'grey80')
          )
  }
  
  yax <- c(runif(26, 0.5, 2)) * rep(c(1, -1), 13)
  v_just <- ((yax > 0) - 0.5)/5 * -20
  timeset <- data.frame(model, year, yax, v_just, m_size )
  MLplot(dta = timeset)
  }

@








